# Settings in the [build] context are global and are applied to all contexts
# unless otherwise overridden by more specific contexts.
[build]
  # Directory to change to before starting a build.
  # This is where we will look for package.json/.nvmrc/etc.
  # If not set, defaults to the root directory.
  base = "/"

  # Directory that contains the deploy-ready HTML files and assets generated by
  # the build. This is relative to the base directory if one has been set, or the
  # root directory if a base has not been set. This sample publishes the
  # directory located at the absolute path "root/project/build-output"
  publish = "/site/public"

  # Default build command.
  command = "hugo --source site --config site/config.toml"

# redirect rules for the other domain aliases to my, new, main domain
[[redirects]]
  from = "https://tenfourty.com/"
  to = "https://www.jeremybrown.tech/"

  # Permanent redirect
  status = 301

  # By default, redirects won’t be applied if there’s a file with the same
  # path as the one defined in the `from` property. Setting `force` to `true`
  # will make the redirect rule take precedence over any existing files.
  force = true
  
[[redirects]]
  from = "https://www.tenfourty.com/"
  to = "https://www.jeremybrown.tech/"

  # Permanent redirect
  status = 301

  # By default, redirects won’t be applied if there’s a file with the same
  # path as the one defined in the `from` property. Setting `force` to `true`
  # will make the redirect rule take precedence over any existing files.
  force = true
  
[[redirects]]
  from = "https://www.tenfourty.com/cv/"
  to = "https://www.jeremybrown.tech/"

  # Permanent redirect
  status = 301

  # By default, redirects won’t be applied if there’s a file with the same
  # path as the one defined in the `from` property. Setting `force` to `true`
  # will make the redirect rule take precedence over any existing files.
  force = true
  
[[redirects]]
  from = "https://jeremybrown.live/"
  to = "https://www.jeremybrown.tech/"

  # Permanent redirect
  status = 301

  # By default, redirects won’t be applied if there’s a file with the same
  # path as the one defined in the `from` property. Setting `force` to `true`
  # will make the redirect rule take precedence over any existing files.
  force = true
  
[[redirects]]
  from = "https://www.jeremybrown.live/"
  to = "https://www.jeremybrown.tech/"

  # Permanent redirect
  status = 301

  # By default, redirects won’t be applied if there’s a file with the same
  # path as the one defined in the `from` property. Setting `force` to `true`
  # will make the redirect rule take precedence over any existing files.
  force = true
  
[[redirects]]
  from = "https://www.jeremybrown.tv/"
  to = "https://www.jeremybrown.tech/"

  # Permanent redirect
  status = 301

  # By default, redirects won’t be applied if there’s a file with the same
  # path as the one defined in the `from` property. Setting `force` to `true`
  # will make the redirect rule take precedence over any existing files.
  force = true
  
[[redirects]]
  from = "https://jeremybrown.tv/"
  to = "https://www.jeremybrown.tech/"

  # Permanent redirect
  status = 301

  # By default, redirects won’t be applied if there’s a file with the same
  # path as the one defined in the `from` property. Setting `force` to `true`
  # will make the redirect rule take precedence over any existing files.
  force = true

